worker_processes 1;
error_log log/error.log;

events {
worker_connections 1024;
}

http {
    server {
        access_log log/access.log;
        listen 8080;
        lua_code_cache off;

        set $resp_body "";
        body_filter_by_lua '
            local resp_body = string.sub(ngx.arg[1], 1, 1000)
            ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
            if ngx.arg[2] then
                ngx.var.resp_body = ngx.ctx.buffered
            end
        ';

        location / {
#             proxy_set_header X-Original-URI $request_uri;
#             proxy_set_header X-Original-Args $args;
#             proxy_pass http://localhost:8080/user/get;
#             default_type text/html;
            content_by_lua_file lua/hello.lua;
        }
    }
}